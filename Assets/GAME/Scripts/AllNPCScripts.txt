// ----- File: NPC_Controller.cs -----
using UnityEngine;
using UnityEngine.InputSystem;

public class NPC_Controller : MonoBehaviour
{
    public enum NPCState { Idle, Wander, Talk }

    [Header("States")]
    public NPCState defaultState = NPCState.Wander;
    public State_Wander wander;
    public State_Talk talk;        // new
    public State_Idle idle;        // new

    NPCState current;

    void Awake()
    {
        wander ??= GetComponent<State_Wander>();
        talk   ??= GetComponent<State_Talk>();
        idle   ??= GetComponent<State_Idle>();

        if (!wander) Debug.LogError($"{name}: NPC_State_Wander missing for NPC_Controller.");
        if (!talk)   Debug.LogError($"{name}: NPC_State_Talk missing for NPC_Controller.");
        if (!idle)   Debug.LogError($"{name}: NPC_State_Idle missing for NPC_Controller.");
    }

    void OnEnable()
    {
        SwitchState(defaultState);
    }

    void OnDisable()
    {
        if (wander) wander.enabled = false;
        if (talk)   talk.enabled   = false;
        if (idle)   idle.enabled   = false;
    }

    public void SwitchState(NPCState newState)
    {
        if (current == newState) return;
        current = newState;

        // Enable exactly one state
        idle.enabled    = newState == NPCState.Idle;
        wander.enabled  = newState == NPCState.Wander;
        talk.enabled    = newState == NPCState.Talk;
    }


    void OnTriggerEnter2D(Collider2D other)
    {
        if (!other.CompareTag("Player")) return;

        // Make Talk face the player before switching
        if (talk) talk.FaceTarget(other.transform);

        SwitchState(NPCState.Talk);
    }

    void OnTriggerExit2D(Collider2D other)
    {
        if (!other.CompareTag("Player")) return;
        SwitchState(defaultState);
    }

}

